{
	"info": {
		"_postman_id": "63351d12-94ae-4c53-b25e-e28e2db4e36b",
		"name": "Arculus API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12892641"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "POST Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Arculus\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/auth/login",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"login"
							]
						},
						"description": "The login API accepts the username and password of the user, verifies them, and issues an encrypted JWT token with a one-hour access session."
					},
					"response": []
				},
				{
					"name": "GET Authorize",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/auth/authorize?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"authorize"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "The /authorize API checks the authorization token and returns the user type for the UI to render content based on the user role."
					},
					"response": []
				},
				{
					"name": "POST Signup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"jwtToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\",\r\n    \"username\": \"newuser\",\r\n    \"email\": \"newuser@gmail.com\",\r\n    \"role\": \"Mission Supervisor\",\r\n    \"password\": \"qwertyuiop\",\r\n    \"domains\": \"Explosive Ordnance Reconnaissance,Structural Integrity Assessment\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/auth/signup",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "The /signup API accepts new user information, verifies there is no duplication of user information, creates the new user, and returns success/failure status."
					},
					"response": []
				},
				{
					"name": "POST SendEmailForAuth",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/auth/sendEmailForAuth",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"sendEmailForAuth"
							]
						},
						"description": "The /sendEmailForAuth API sends an authentication e-mail to the user's address with a one-time password (OTP)."
					},
					"response": []
				},
				{
					"name": "PUT SetZTMode",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/auth/setZtMode?mode=no_zt",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"setZtMode"
							],
							"query": [
								{
									"key": "mode",
									"value": "no_zt"
								}
							]
						},
						"description": "The /setZtMode API changes the Zero Trust mode used by the backend based on the dropdown option chosen by the user."
					},
					"response": []
				},
				{
					"name": "POST VerifyOTP",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\",\r\n    \"otp\": \"836657\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/auth/verifyOtp",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"auth",
								"verifyOtp"
							]
						},
						"description": "The /verifyOtp API checks the input OTP and verifies it against the issues code. It returns a failure status if the OTP is incorrect."
					},
					"response": []
				}
			],
			"description": "The Authorization APIs handle the user creation, sign-in and session management of the application."
		},
		{
			"name": "User",
			"item": [
				{
					"name": "DELETE DeleteUser",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/user/deleteUser?username=newuser&authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"user",
								"deleteUser"
							],
							"query": [
								{
									"key": "username",
									"value": "newuser"
								},
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "The /deleteUser API can be used by authorized Mission Creator users to delete other users."
					},
					"response": []
				},
				{
					"name": "GET GetUsers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/user/getUsers?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"user",
								"getUsers"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "The /getUsers API fetches all the users in Arculus accepting a valid Mission Creator user."
					},
					"response": []
				},
				{
					"name": "POST UpdateUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM\",\r\n    \"user\": \"mizzouceri\",\r\n    \"updated_username\": \"mizzouceri\",\r\n    \"email_id\": \"mizzouceri@umsystem.edu\",\r\n    \"role\": \"Mission Creator\",\r\n    \"domains\": \"Covert Operations Support,Structural Integrity Assessment,Crisis Response and Restoration,Explosive Ordnance Reconnaissance\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/user/updateUser",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"user",
								"updateUser"
							]
						},
						"description": "The /updateUser API is used to edit user information and configuration by an authorized Mission Creator user."
					},
					"response": []
				},
				{
					"name": "GET GetCurrentUser",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/user/getCurrentUser?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"user",
								"getCurrentUser"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "This API fetches the information of the current user using his/her authorization token."
					},
					"response": []
				}
			],
			"description": "The User APIs handle the user management functionalities like updating, deleting, and fetching user information."
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "GET GetTrustedDevices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/device/getTrustedDevices?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"getTrustedDevices"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "This API fetches the list of devices configured with K3s pods when provided with an authorized Mission Creator user."
					},
					"response": []
				},
				{
					"name": "GET GetMoreNodes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/device/getMoreNodes?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"getMoreNodes"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								}
							]
						},
						"description": "This API fetches devices in the cluster that aren't configured with functions and K3s pods."
					},
					"response": []
				},
				{
					"name": "DELETE RemoveTrustedDevice",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/device/removeTrustedDevice?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug&deviceName=controller",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"removeTrustedDevice"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug"
								},
								{
									"key": "deviceName",
									"value": "controller"
								}
							]
						},
						"description": "This API accepts an authorization token and device name, and deletes the device on the user being an authorized Mission Creator."
					},
					"response": []
				},
				{
					"name": "POST AddTrustedDevice",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\",\r\n    \"deviceName\": \"controller\",\r\n    \"ipAddress\": \"172.31.88.29\",\r\n    \"deviceType\": \"Video Analytic Controller\",\r\n    \"tasks\": [\r\n        \"send_command\",\r\n        \"receive_posdata\",\r\n        \"receive_sensordata\",\r\n        \"receive_video\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/device/addTrustedDevice",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"addTrustedDevice"
							]
						},
						"description": "This API is used to configure a node with virtualized functionality for a specific device type and its allowed functions."
					},
					"response": []
				},
				{
					"name": "PUT UpdateTrustedDevice",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\",\r\n    \"deviceName\": \"controller\",\r\n    \"ipAddress\": \"10.42.0.232\",\r\n    \"currentName\": \"controller\",\r\n    \"tasks\": [\r\n        \"send_command\",\r\n        \"receive_sensordata\",\r\n        \"receive_posdata\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/device/updateTrustedDevice",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"updateTrustedDevice"
							]
						},
						"description": "This API updates the allowed functions for a configured device."
					},
					"response": []
				},
				{
					"name": "POST AddToCluster",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ipAddress\": \"162.219.62.167\",\r\n    \"nodeName\": \"newDrone1\",\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/device/addToCluster",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"addToCluster"
							]
						},
						"description": "This API adds a device to the Arculus cluster when an authorized user accepts a join cluster request."
					},
					"response": []
				},
				{
					"name": "DELETE RemoveFromCluster",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5Mjk1MzAsImV4cCI6MTcxODkzMzEzMH0.3l8GFdBJyng8CZ8GU7nBS-d4BJ1JiTyuZ9WEWp1Cgug\",\r\n    \"nodeName\": \"dronex\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/device/removeFromCluster",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"device",
								"removeFromCluster"
							]
						},
						"description": "This API removes devices from the K3s cluster when an authorized user removes it using the \"Remove from cluster\" button."
					},
					"response": []
				}
			],
			"description": "The Device APIs are used to add devices to the Arculus cluster, configure and deconfigure them, and remove them from the cluster."
		},
		{
			"name": "Policy",
			"item": [
				{
					"name": "GET GetNetworkPolicies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/policy/getNetworkPolicies?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"policy",
								"getNetworkPolicies"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM"
								}
							]
						},
						"description": "The /getNetworkPolicies API fetches all the network policies among devices when an authorized user requests it."
					},
					"response": []
				},
				{
					"name": "POST AddNetworkPolicy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM\",\r\n    \"device\": \"survdrone\",\r\n    \"ingress\": [\r\n        {\r\n            \"device\": \"surveillancedrone\",\r\n            \"port\": \"8080\",\r\n            \"protocol\": \"TCP\"\r\n        }\r\n    ],\r\n    \"egress\": [\r\n        {\r\n            \"device\": \"newdemodrone\",\r\n            \"port\": \"8000\",\r\n            \"protocol\": \"UDP\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/policy/addNetworkPolicy",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"policy",
								"addNetworkPolicy"
							]
						},
						"description": "This API is used to create a new network policy with ingress and egress rules for a device."
					},
					"response": []
				},
				{
					"name": "DeleteNetworkPolicy",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM\",\r\n    \"policyName\": \"policy-survdrone\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/policy/deleteNetworkPolicy",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"policy",
								"deleteNetworkPolicy"
							]
						},
						"description": "This API is used to delete an existing network policy."
					},
					"response": []
				}
			],
			"description": "The Policy APIs are used to create network policies between devices to control their network ingress and egress using Software-Defined Networking (SDN)."
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "GET GetTasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/task/getTasks?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"task",
								"getTasks"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM"
								}
							]
						},
						"description": "The task API fetches the list of available functions from the database to configure them for devices."
					},
					"response": []
				}
			],
			"description": "The task API fetches the list of available functions from the database to configure them for devices."
		},
		{
			"name": "Utilization",
			"item": [
				{
					"name": "GET GetUtilizationData",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/utilization/getUtilizationData",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"utilization",
								"getUtilizationData"
							]
						},
						"description": "The utilization API is used to fetch the CPU and memory utilization on the Arculus server for monitoring purposes."
					},
					"response": []
				}
			],
			"description": "The utilization API is used to fetch the CPU and memory utilization on the Arculus server for monitoring purposes."
		},
		{
			"name": "Mission",
			"item": [
				{
					"name": "GET GetMissionByCreatorId",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://44.202.251.161:3001/mission/getMissionsByCreatorId?authToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"mission",
								"getMissionsByCreatorId"
							],
							"query": [
								{
									"key": "authToken",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM"
								}
							]
						},
						"description": "This API fetches the list of all missions created by a certain Mission Creator user by fetching his/her user ID."
					},
					"response": []
				},
				{
					"name": "POST CreateMission",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"authToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFyY3VsdXMiLCJwYXNzd29yZCI6IkJ1cm5pdGUuMjQiLCJpYXQiOjE3MTg5MzMxNzYsImV4cCI6MTcxODkzNjc3Nn0.MMGXVLY9-F7zACJc_70L5IQeAjKzcxb2my2_4X_AxEM\",\r\n    \"mission_config\": \"{\\\"location\\\":\\\"/desert.png\\\",\\\"mission_type\\\":\\\"Stealthy Reconnaissance and Resupply\\\",\\\"gcX\\\":202.3168,\\\"gcY\\\":420.0448,\\\"destX\\\":1370.660164933668,\\\"destY\\\":465.848404446038,\\\"selections\\\":{\\\"Video-Analytic Route Planner (Ground Control)\\\":\\\"controller\\\",\\\"Video Collection Surveillance Drone\\\":\\\"surveillancedrone\\\",\\\"Supply Delivery Drone\\\":\\\"survdrone\\\",\\\"Communication Relay Drone\\\":\\\"relaydrone\\\"},\\\"create_time\\\":\\\"2024-06-21 01:43:44\\\",\\\"duration_sec\\\":120}\",\r\n    \"supervisors\": [],\r\n    \"viewers\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/mission/createMission",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"mission",
								"createMission"
							]
						},
						"description": "This API authorizes if the user requesting is a Mission Creator and on success, it creates a new mission."
					},
					"response": []
				},
				{
					"name": "POST ExecuteStealthyReconAndResupply",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"gcX\": 202.3168,\r\n    \"gcY\": 420.0448,\r\n    \"destX\": 1370.660164933668,\r\n    \"destY\": 465.848404446038,\r\n    \"controller\": \"controller\",\r\n    \"supplyDrone\": \"survdrone\",\r\n    \"surveillanceDrone\": \"surveillancedrone\",\r\n    \"relayDrone\": \"relaydrone\",\r\n    \"missionId\": 472\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://44.202.251.161:3001/mission/executeStealthyReconAndResupply",
							"protocol": "http",
							"host": [
								"44",
								"202",
								"251",
								"161"
							],
							"port": "3001",
							"path": [
								"mission",
								"executeStealthyReconAndResupply"
							]
						},
						"description": "This API is used to execute the Stealthy Reconnaissance and Resupply mission with the mission information."
					},
					"response": []
				}
			],
			"description": "The Mission APIs are used for the web simulation of various phases of a mission from its creation to its execution or abortion."
		},
		{
			"name": "Honeypot",
			"item": [],
			"description": "The honeypot APIs are used to deploy and undeploy honeypots on the devices in the cluster."
		}
	]
}